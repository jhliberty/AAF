Instructions for building an API Ref manual from the IDL with Doxygen

Original - Joshua Goldman, Avid
Updated  - Simon Carter, AAF Assoc Dev Support (Sept 01)
Converted from DocJet to Doxygen - Jeff Downs, PGSC

Requirements:

- UNIX-like system with GNU make and basic file utils (cp, mv, etc.)
      GNU Make is REQUIRED (like the rest of the SDK)
      Windows systems can build the docs using Cygwin

- Doxygen (http://www.doxygen.org).
      The initial development was done with version 1.3.9.1,
          but any version later than this should work.
      Versions known to NOT work:
          1.2.18 (and earlier)
      The version currently distributed with Cygwin (1.2.18) does NOT
          contain the functionality necessary to build the documentation.
          Download the source for a recent version and compile under Cygwin.

- Building Windows HTML Help (.chm) files requires (in addtion to the above)
      Microsoft's HTML Help Workshop (free)
          http://go.microsoft.com/fwlink/?LinkId=14188




Background:

Doxygen reads the IDL files generated by dodo.  It produces two sets of
documentation, one for the COM API (the main API of the SDK) and one for the
Plug-In API.  It currently produces HTML documentation and (optionally, on
Windows only) Windows HTMLHelp .chm files.

The Plug-In API cross-links into the COM API for easy cross referencing of
types shared by the two. Because of this behavior, the Plug-In documentation
assumes that the COM API documentation is installed in parallel with it. 
The COM API can be used independantly (technically speaking, so can the
Plug-In API docs, but some links will just be broken).

This is the layout the generated documentation expects (for either the web
server installed version, or an offline version from an archive).

BASE_DIRECTORY/
   aafapiman/
      ... COM API files ...
   pluginapiman/
      ... Plug-In API files ...

This layout can be observed in the output directory following the generation
of the documentation.

If you build the HTML Help documentation (Window's Help), there will also be
output directories for those. These should not be used in HTTP deployment.



Generation Steps 

1. Do a CVS update on your workspace to make sure the dodo files and headers
are up to date. Running 'make' or 'make usage' will give you possible targets.

2. Run 'make doc' in this directory (AAF/ref-impl/doc/com-api).  This will
generate the HTML versions of both documentation sets in the 'output'
directory (AAF/ref-impl/doc/com-api/output).

3. If you want archives of these, do 'make doczip'. This will make two ZIP
files, one for each documentation set.

4. HTML Help files (.chm) can also be generated by doing 'make windoc'. The
HTML Help generation support in the Makefile depends on having Microsoft's
HTML Help Workshop installed in the default location
(C:\Program Files\HTML Help Workshop).  If you have it installed elsewhere,
edit the line near the top of the Makefile to point to the correct location.
A separate .chm file is created in the output directory for each
documentation set.
   

-----------

