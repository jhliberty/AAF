           README for eli2aaf
           ==================

eli2aaf is a command line utility to create an AAF file corresponding to the
edit decisions in a lavtools (mjpegtools) ELI file for DV media.

An example of usage is to ingest DV from a DV Camcorder using Kino, create a
composition in Kino, then save the edit decisions in ELI format using
"Save As ELI" from Kino's File menu.  Running eli2aaf on the saved ELI file
will then create an AAF file with a composition corresponding to the edit
decisions made in Kino.  The AAF file will contain embedded essence for the
video and audio tracks of the DV files and can be imported into commercial
non-linear editing applications that support AAF.

eli2aaf is distributed under the terms of the GNU General Public License.
See the file COPYING for full details of the license.

Requirements
============

AAF SDK from CVS from no earlier than April 2003.

Building
========
  from toplevel of SDK:
    make utilities
  or 
    cd Utilities/eli2aaf && make

The executable, eli2aaf, will be written to <platform>/g++/bin/debug/eli2aaf

Usage
=====
  eli2aaf [-netloc] infile outfile [essencedir]

    -netloc     flag which cause essence not to be embedded, and a
                NetworkLocator object added instead
    infile      ELI format file
    outfile     AAF file to be written
    essencedir  Optional directory where raw DV files are stored.  If specified
                this directory will be assumed to contain all DV files listed
                in the ELI input file.  This is useful if the ELI file was
                written under Unix, but the eli2aaf utility is being run under
                MS Windows where drive letters complicate filepaths.

  The DV files referenced in the ELI file must be accessible when eli2aaf is
  executed.

Known bugs or limitations
=========================

 * Audio is only supported for PAL DV files at 48 kHz 16 bit sampling

 * NTSC video is supported but no audio tracks or sources will be added

 * Importing of output AAF file has only been tested with Avid Xpress DV 3.0

 * The Name of the tape Source Mob is hard-coded to "DCAE"

 * No attempt is made to recover from bad or missing video/audio data

 * Raw DV files only are supported

 * A limitation (bug) of the Microsoft Structured Storage implementation is
   that it enters an infinite loop when reading/writing AAF files > 80MB.
   Instead use libgsf (contact the author for more information) or OLE32.DLL
   under MS Windows.

References
==========

  Kino         http://kino.schirmacher.de/
  MJPEGTools   http://mjpeg.sourceforge.net/

Feedback
========

Send feedback to stuart_hc@users.sourceforge.net
