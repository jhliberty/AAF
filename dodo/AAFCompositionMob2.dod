#c *********************************************************************
#c
#c $Id: AAFCompositionMob2.dod,v 1.5 2009/06/01 11:46:49 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c Portions created by British Broadcasting Corporation are
#c Copyright 2004, British Broadcasting Corporation.  All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFCompositionMob2\
#endm
#c
#startm .parent-module 0
AAFMob\
#endm
#c
#c #import ./AAFMob.exp
AD_HEAD
AD_IDL(///
/// The IAAFCompositionMob2 interface is implemented on objects which
/// can specify how to combine content data elements into a sequence\,
/// how to modify content data elements\, and how to synchronize content
/// data elements.	   
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///)
AD_CLASS_UUID(4252586, 6cde, 4d5e, 90, 14, 58, a1, e2, 1f, ad, 3c)

AD_DEFAULT_UUID(188a82c7, 0d87, 4af3, 89, e0, 5f, 96, e5, 6f, f9, de)
AD_XCLASS_BEGIN(Concrete, StoredObject)

#c
#c Original AAFCompositionMob methods
#c

AD_XMETHOD1(Initialize,
			[in\, string],
			objPass,
			aafCharacter_constptr,
			pName,
			Mob name [optional],

			Initializes this object with the given name.
  /// 
  /// Succeeds if all of the following are true:
  /// - this object has not yet been initialized.
  /// - the pName pointer is valid.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_ALREADY_INITIALIZED
  ///   - Initialize\(\) has already been called on this object.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pName argument is NULL.)


AD_XMETHOD1(GetDefaultFade,
			[out],
			objPass,
			aafDefaultFade_t *,
			pResult,
			a default fade struct,
			Get the default fade for this composition.  If there is no
  /// default fade\, this function returns with no error\, but the VALID
  /// field of the structure is false.  This allows you to pass this
  /// struct to SourceClip::GetFade\(\) in all cases.
  ///
  /// Succeeds if all of the following are true:
  /// - this object has already been initialized.
  /// - the pResult pointer is valid.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pResult argument is NULL.)
	

AD_XMETHOD3(SetDefaultFade,
			[in],
			objPass,
			aafLength_t,
			fadeLength,
			Default fade length,

			[in],
			enumIn,
			aafFadeType_t,
			fadeType,
			default fade type,

			[in],
			objPass,
			aafRational_t,
			fadeEditUnit,
			default fade edit unit,

			Adds the default crossfade properties to the Mob.
  ///
  /// Succeeds if all of the following are true:
  /// - this object has already been initialized.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.
  ///
  /// AAFRESULT_BAD_TYPE
  ///   - invalid fadeType.
  ///
  /// AAFRESULT_BAD_LENGTH
  ///   - invalid fadeLength.)

#c
#c New AAFCompositionMob2 methods
#c

AD_XMETHOD1(SetRendering,
                        [in\, ref],
                        objPass,
                        aafMobID_constref,
                        mobID,
                        Rendering MobID,
  set the MobID of a rendering of this CompositionMob.

  /// This method will return the following codes:
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\))

AD_XMETHOD1(GetRendering,
                        [out],
                        objPass,
                        aafMobID_t *,
                        pMobID,
                        Rendering MobID,
  return the MobID of a rendering of this CompositionMob.

  /// Succeeds if all of the following are true:
  /// - the pMobID pointer is valid.
  ///
  /// If this method fails nothing will be written to *pMobID.
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  ///
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pMobID arg is NULL.)


AD_XCLASS_END(Concrete, StoredObject)
