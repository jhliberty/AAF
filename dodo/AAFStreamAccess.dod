#c *********************************************************************
#c
#c $Id: AAFStreamAccess.dod,v 1.2 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFStreamAccess\
#endm
#startm .parent-module 0
AAFRoot\
#endm
#c
AD_HEAD
AD_IDL(///
/// This interface is used by the toolkit
AD_STD_COMMENT_IFC_HEADER)
AD_CLASS_UUID(AAAA7A7B, 126F, 41f3, B2, 4C, 2D, 7A, 23, 20, F7, CD)

AD_DEFAULT_UUID(065F5F69, 3A64, 401e, A1, A6, 58, 33, 26, 8F, 52, 36)

AD_XCLASS_BEGIN(Concrete, Transient)

AD_XMETHOD2(WriteStream,
			[in],
			objIn,
			AAFPropertyValue,
			propertyValue,
			One which will this data be written,

			[in],
			objPass,
			aafMemPtr_t,
			pUserData,
			A client-supplied pointer used to extract the data,

     This method is called back by the AAF toolkit when a previously
  /// defined stream property is actually being written\, so that you
  /// may write the data.
  ///  IAAFTypeDef *pTypeDef;
  ///  IAAFTypeDefStream *pTypeDefStream;
  /// 
  ///  propertyValue->GetType\(&pTypeDef\)\);
  ///  pTypeDef->QueryInterface\(IID_IAAFTypeDefStream\,\(void **\)&pTypeDefStream\)\);
  ///  pTypeDefStream->Write\(pStreamPropertyValue\, ...\);
  ///  )

AD_XCLASS_END(Concrete, Transient)
