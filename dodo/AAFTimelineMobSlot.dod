#c *********************************************************************
#c
#c $Id: AAFTimelineMobSlot.dod,v 1.22 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFTimelineMobSlot\
#endm
#c
#startm .parent-module 0
AAFMobSlot\
#endm
#c
#c #import ./AAFMobSlot.exp
#import ./AAFTimelineMobSlot2.exp
AD_HEAD
AD_IDL(///
///
/// This interface is DEPRECATED\, please use IAAFTimelineMobSlot2.
///
/// The IAAFTimelineMobSlot interface is implemented by objects which
/// contain time-varying timeline essence.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///
/// Types required by this module:
///
/// aafBool
/// aafRational_t
/// aafPosition_t
/// aafTrackID_t
///)
AD_CLASS_UUID(B1A21379, 1A7D, 11D2, BF, 78, 00, 10, 4B, C9, 15, 6D)

AD_DEFAULT_UUID(B1A21378, 1A7D, 11D2, BF, 78, 00, 10, 4B, C9, 15, 6D)
AD_COM_EXT_CLASS_BEGIN(public IAAFTimelineMobSlot2)
AD_METHOD0(Initialize,
		   Initializes a newly allocated\, empty
  /// IAAFTimelineMobSlot-supporting object.  This method must be
  /// called after allocation\, and before any other method can be
  /// called.
  ///
  /// Succeeds if:
  /// - Initialize\(\) has not yet been called on this object.
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_ALREADY_INITIALIZED
  ///   - Initialize\(\) has already been called on this object.)


AD_METHOD1(GetEditRate,
		   [out\\\,retval], 
		   aafRational_t *, 
		   pEditRate, 
		   Edit rate property value,
		   This method will get the edit rate for this mob slot.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pEditRate pointer is valid.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\\\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \\\(This is the only code indicating success.\\\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\\\(\\\) called on it.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pEditRate arg is NULL.)


AD_METHOD1(SetEditRate,
		   [in], 
		   aafRational_constref, 
		   editRate, 
		   Edit rate property value,
		   This method will get set edit rate for this mob slot.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\\\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \\\(This is the only code indicating success.\\\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\\\(\\\) called on it.)


AD_METHOD1(GetOrigin,
		   [out\\\,retval],
		   aafPosition_t *,
		   pOrigin,
		   Origin property value,
		   This method will return the origin of this mob slot.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pOrigin pointer is valid.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\\\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \\\(This is the only code indicating success.\\\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\\\(\\\) called on it.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pOrigin arg is NULL.)


AD_METHOD1(SetOrigin,
		   [in],
		   aafPosition_t,
		   origin,
		   Origin property value,
		   This method will set the origin of this mob slot.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\\\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \\\(This is the only code indicating success.\\\).
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\\\(\\\) called on it.)
AD_COM_METH(.method-SetMarkIn)
AD_COM_METH(.method-GetMarkIn)
AD_COM_METH(.method-SetMarkOut)
AD_COM_METH(.method-GetMarkOut)
AD_COM_METH(.method-SetUserPos)
AD_COM_METH(.method-GetUserPos)

AD_COM_EXT_CLASS_END(AAFTimelineMobSlot2)
