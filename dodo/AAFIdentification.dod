#c *********************************************************************
#c
#c $Id: AAFIdentification.dod,v 1.26 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFIdentification\
#endm
#c
#startm .parent-module 0
AAFObject\
#endm
#c
#c #import ./AAFObject.exp
AD_HEAD
AD_IDL(///
/// The IAAFIdentification interface provides information about an
/// application that either created or modified the AAF file.
///
/// If a file was opened for modification by many applications in its
/// lifetime\, then there will be multiple Identification objects.
/// These are kept in an ordered array\, with the first entry being the
/// file creator\, and the last entry being the last application to
/// modify the file.
///
/// The identification object is useful for technical support when
/// diagnosing problem AAF files\, as it tells which applications \(and
/// versions\) have touched the file.   If a file has been modified by
/// multiple applications\, then the date and productID fields can be
/// used to tell which changes to the file were made by a particular
/// application.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///)
AD_CLASS_UUID(B1A2137F, 1A7D, 11D2, BF, 78, 00, 10, 4B, C9, 15, 6D)

AD_DEFAULT_UUID(B1A2137E, 1A7D, 11D2, BF, 78, 00, 10, 4B, C9, 15, 6D)
AD_XCLASS_BEGIN(Concrete, StoredObject)
AD_XMETHOD4(Initialize,
			[in],
			objPass,
			aafCharacter_constptr,
			companyName,
			company name string,

			[in],
			objPass,
			aafCharacter_constptr,
			productName,
			product name string,

			[in],
			objPass,
			aafCharacter_constptr,
			productVersionString,
			product version string,

			[in],
			objPass,
			aafUID_constref,
			productID,
			product identification,

     Initializes a newly allocated IAAFIdentification-supporting
  /// object.  This method must be called after allocation\, and before
  /// any other method can be called.
  ///
  /// This method fills in the mandatory properties of the object.  The
  /// values of the following required properties are set based on the
  /// information given in arguments to this method:
  /// - companyName
  /// - productname
  /// - productVersionString
  /// - productID
  /// 
  /// The following mandatory properties will be filled in
  /// automatically by the reference implementation:
  /// - date
  /// - generationAUID
  ///
  /// Succeeds if:
  /// - Initialize\(\) has not yet been called on this object.
  /// - companyName is a valid pointer
  /// - productName is a valid pointer
  /// - productVersionString is a valid pointer
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_ALREADY_INITIALIZED
  ///   - Initialize\(\) has already been called on this object.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - companyName\, productName\, or productVersionString is NULL.)


AD_STD_METHOD_STRING_GET_AND_SIZE(CompanyName,
     the Company Name string property.)


AD_STD_METHOD_STRING_GET_AND_SIZE(ProductName,
     the Product Name string property.)


AD_STD_METHOD_STRING_GET_AND_SIZE(ProductVersionString,
     the Product Version string property.)


AD_XMETHOD1(GetProductVersion,
			[out],
			objPass,
			aafProductVersion_t *,
			pVersion,
			The Product Version,
     Gets the Product Version property associated with this
  /// identification object and places it into *pVersion.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pVersion pointer is valid.
  /// 
  /// If this method fails\, nothing will be written to *pVersion.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pVersion arg is NULL.)


AD_XMETHOD1(SetProductVersion,
			[in],
			objPass,
			aafProductVersion_constref,
			version,
			The Product Version,
     Set the Product Version property to the value specified in
  /// pVersion.  A copy is made of the data so the caller retains
  /// ownership of the *pVersion struct and is responsible for
  /// de-allocating it.
  /// 
  /// If this method fails the Product Version property will not be
  /// changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.)


AD_XMETHOD1(GetProductID,
			[out],
			objPass,
			aafUID_t *,
			pProductID,
			The Product ID,
      Obtains the Product ID\, which is the identification number
  /// assigned to the application and vendor of the application which
  /// attached this object to the AAF file.  This ID is written into
  /// the caller-allocated aafUID_t specified by the pProductID
  /// argument.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pProductID pointer is valid.
  /// 
  /// If this method fails nothing will be written to *pProductID.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pProductID arg is NULL.)


AD_XMETHOD1(GetDate,
			[out],
			objPass,
			aafTimeStamp_t *,
			pTimestamp,
			The date-time stamp,
     Writes the Date-time Stamp property into the caller-allocated
  /// aafTimeStamp_t specified by the pTimeStamp argument.  The
  /// date-time stamp recorded in this object corresponds to the time
  /// that this file was created or modified upon the occasion that
  /// this object was added to the file.
  ///
  /// Note: This is a read-only property.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pTimeStamp pointer is valid.
  /// 
  /// If this method fails nothing will be written to *pTimeStamp.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pTimeStamp arg is NULL.)


AD_XMETHOD1(GetRefImplVersion,
			[out],
			objPass,
			aafProductVersion_t *,
			pVersion,
			The Reference Implementation Version,
     Obtains the version of the Reference Implementation which
  /// created this identification object and writes it into the
  /// caller-allocated aafProductVersion_t specified by the pVersion
  /// argument.
  ///
  /// Note: This is a read-only property.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pVersion pointer is valid.
  /// 
  /// If this method fails nothing will be written to *pVersion.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pVersion arg is NULL.)


AD_STD_METHOD_STRING_GET_AND_SIZE(Platform,
     the Platform string property.
  ///
  /// This information is provided only to allow diagnostic printing of
  /// platform information to be read by humans.  The format of the
  /// strings is not guaranteed to remain the same for a given
  /// platform.  Having said that\\\, the possible values currently
  /// returned are:
  /// - "Win32" for Intel/Win32 platforms
  /// - "MacOS" for MacOS platforms
  /// - "Unknown" for unknown platforms)


AD_XMETHOD1(GetGenerationID,
			[out],
			objPass,
			aafUID_t *,
			pGeneration,
			The unique generation,
			Obtains the generation of this AAF file\, which was generated at
  /// the time this identification object was created.  If a file was
  /// opened for modification by many applications in its lifetime\,
  /// then there will be multiple Identification objects.  This is
  /// written into the caller-allocated aafUID_t specified by the
  /// pGeneration argument.
  /// 
  /// Note: This is a read-only property.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pGeneration pointer is valid.
  /// 
  /// If this method fails nothing will be written to *pGeneration.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pGeneration arg is NULL.)
AD_XCLASS_END(Concrete, StoredObject)
