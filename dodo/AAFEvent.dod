#c *********************************************************************
#c
#c $Id: AAFEvent.dod,v 1.8 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFEvent\
#endm
#c
#startm .parent-module 0
AAFSegment\
#endm
#c
AD_HEAD

AD_IDL(///
/// The IAAFEvent interface is implemented by objects which represent
/// a text comment\, a trigger\, or an area in the image that has an
/// associated interactive action.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///
/// AAFRESULT_NOT_INITIALIZED
///   - This object has not yet had Initialize\(\) called on it through
///     this object's primary interface.  Note that IAAFMobSlot is a
///     primary interface for an abstract class\, so it is not
///     appropriate for the Initialize\(\) method to exist in this
///     interface.  The Initialize\(\) method is available through the
///     concrete object's primary interface.
/// 
///)

AD_CLASS_UUID(e684d78f, b935, 11d2, bf, 9d, 00, 10, 4b, c9, 15, 6d)

AD_DEFAULT_UUID(e684d790, b935, 11d2, bf, 9d, 00, 10, 4b, c9, 15, 6d)
AD_XCLASS_BEGIN(Abstract, StoredObject)

AD_METHOD1(GetPosition,
		[out\\\,retval],
		aafPosition_t *,
		pPosition,
		Position property value,
		This method will return the Position of this event.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pPosition pointer is valid.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\\\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \\\(This is the only code indicating success.\\\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\\\(\\\) called on it.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pPosition arg is NULL.)

AD_METHOD1(SetPosition,
		[in],
		aafPosition_t,
		Position,
		Position property value,
		This method will set the Position of this event.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\\\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \\\(This is the only code indicating success.\\\).
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\\\(\\\) called on it.)


AD_STD_METHOD_STRING_MULTI_SET_GET_SIZE(Comment,
	specifies the purpose of the event.)

AD_XCLASS_END(Abstract, StoredObject)
