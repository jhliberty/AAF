#c *********************************************************************
#c
#c $Id: AAFTypeDefObjectRef.dod,v 1.20 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFTypeDefObjectRef\
#endm
#c
#startm .parent-module 0
AAFTypeDef\
#endm
#c
#import ./AAFTypeDef.exp
AD_HEAD
AD_IDL(///
/// This interface is used to define Object references \(either strong
/// or weak\) used in AAF persistent objects.
AD_STD_COMMENT_IFC_HEADER)

AD_FORWARD_DECLARATION(AAFObject)
AD_FORWARD_DECLARATION(AAFPropertyValue)
AD_FORWARD_DECLARATION(AAFClassDef)
AD_CLASS_UUID(c3274643, 9467, 11d2, 84, 1f, 00, 60, 08, 32, ac, b8)

AD_DEFAULT_UUID(c3274644, 9467, 11d2, 84, 1f, 00, 60, 08, 32, ac, b8)
AD_XCLASS_BEGIN(Abstract, Transient)

AD_NO_EXPORT(
AD_XMETHOD1(GetObjectType\,
			[out]\,
			objOut\,
			AAFClassDef\,
			ppObjType\,
			class def of objects permitted to be referenced\,

     Returns the class def representing objects to which this type def
  /// can refer.  The returned type def is the class definition of the
  /// least-derived type which is permissible to be represented.
  ///
  /// Succeeds if:
  /// - this object has been Initialize\\\(\\\)d.
  /// - The ppObjType pointer is valid.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\\\(ppObjType\\\)\))

AD_XMETHOD2(CreateValue,
			[in],
			unkIn,
			Unknown,
			pObj,
			object with which to initialize this object reference,

			[out],
			objOut,
			AAFPropertyValue,
			ppPropVal,
			newly created property value,

     Creates a property value which contains an object reference.
  /// Initializes it to refer to the given object\, and returns the
  /// newly-created property value in ppPropVal.
  ///
  /// Succeeds if:
  /// - The pObj pointer is valid.
  /// - The ppPropVal pointer is valid.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either pObj or ppPropVal\))

AD_GETOBJECT3(GetObject,
			[in],
			objIn,
			AAFPropertyValue,
			pPropVal,
			property value from which value is to be read,

			[in],
			objPass,
			REFIID,
			iid,
			interface id of the required output,

			[out\, iid_is\(iid\)],
			unkOut,
			Unknown,
			ppObject,
			pointer to object value,

     Returns the object contained in the named property value.
  /// Requires that pPropVal be a strong object reference or a weak
  /// object reference.
  ///
  /// Succeeds if:
  /// - The pPropVal pointer is valid.
  /// - The ppObject pointer is valid.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either pPropVal or ppObject\))


AD_XMETHOD2(SetObject,
			[in],
			objIn,
			AAFPropertyValue,
			pPropVal,
			property value from which value is to be read,

			[in],
			unkIn,
			Unknown,
			pObject,
			pointer to object value,

     Sets the named property value to refer to the named object.
  /// Requires that pPropVal be a strong object reference or a weak
  /// object reference.
  ///
  /// Succeeds if:
  /// - The pPropVal pointer is valid.
  /// - The ppObject pointer is valid.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either pPropVal or ppObject\))


AD_OVERRIDE(.method-GetTypeCategory)
AD_XCLASS_END(Abstract, Transient)
