#c *********************************************************************
#c
#c $Id: AAFTimecode.dod,v 1.14 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFTimecode\
#endm
#c
#startm .parent-module 0
AAFSegment\
#endm
#c
#import ./AAFSegment.exp
AD_HEAD
AD_IDL(///
/// The IAAFTimecode interface is implemented by objects which store
/// videotape or audio tape timecode information.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///)
AD_CLASS_UUID(92B88036, 2B2B, 11d2, BF, 7E, 00, 10, 4B, C9, 15, 6D)

AD_DEFAULT_UUID(92B88035, 2B2B, 11d2, BF, 7E, 00, 10, 4B, C9, 15, 6D)
AD_XCLASS_BEGIN(Concrete, StoredObject)
AD_XMETHOD2(Initialize,
			[in],
			objPass,
			aafLength_t,
			length,
			Length Property Value,

			[in],
			objPass,
			aafTimecode_t*,
			pTimecode,
			Timecode Value \(startFrame\, drop\, fps\),

			Initializes this object with the given length and timecode
  /// values.  Length is specified in units of the edit rate of the
  /// containing timeline mob slot.
  /// 
  /// Succeeds if all of the following are true:
  /// - this object has not yet been initialized.
  /// - the pTimecode pointer is valid.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_ALREADY_INITIALIZED
  ///   - Initialize\(\) has already been called on this object.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pTimecode argument is NULL.)


AD_XMETHOD1(GetTimecode,
			[out],
			objPass,
			aafTimecode_t *,
			pTimecode,
			Timecode \(startFrame\, drop\, fps\),

			Get the timecode fields.
  ///
  /// Succeeds if all of the following are true:
  /// - the pTimecode pointer is valid.
  /// 
  /// If this method fails nothing will be written to *pTimecode.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - Initialize\(\) has already been called on this object.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pTimecode arg is NULL.)


AD_XMETHOD1(SetTimecode,
			[in],
			objPass,
			aafTimecode_t *,
			timecode,
			Timecode \(startFrame\, drop\, fps\),

			Set the timecode fields.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pTimecode pointer is valid.
  /// 
  /// If this method fails no state will be changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - Initialize\(\) has already been called on this object.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pTimecode arg is NULL.)


AD_OVERRIDE(.method-SegmentOffsetToTC)
AD_OVERRIDE(.method-SegmentTCToOffset)
AD_XCLASS_END(Concrete, StoredObject)
