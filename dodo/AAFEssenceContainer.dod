#c *********************************************************************
#c
#c $Id: AAFEssenceContainer.dod,v 1.9 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFEssenceContainer\
#endm
#c
AD_HEAD
AD_IDL(///
/// This interface is used to access essence data in an external
/// data file.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///)

AD_DEFAULT_UUID(a7337031, c103, 11d2, 80, 8a, 00, 60, 08, 14, 3e, 6f)
AD_XCLASS_BEGIN(Abstract, Transient)
AD_XMETHOD3(CreateEssenceStream,
			[in\, string],
			objPass,
			aafCharacter_constptr,
			pName,
			String key to identify the new essence within container,
			
			[in],
			objPass,
			aafMobID_constptr,
			pMobID,
			Optional mobID identifying the essence,

			[out\, retval],
			objOut,
			AAFEssenceStream,
			ppEssenceStream,
			address of local variable to contain the essence stream pointer.,

			Attempt to create an essence stream in the container 
  /// for reading and writing.
  /// Returns one of the following:
  ///
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - both pName and pMobID cannot be NULL.
  ///
  /// AAFRESULT_ILLEGAL_VALUE
  ///   - pName or pMobID \(or both\) are invalid
  ///
  /// AAFRESULT_FILE_EXISTS
  ///   - the given path and or mobID  already points to an existing stream 
  ///     within the container.)


AD_XMETHOD3(CreateEssenceStreamWriteOnly,
			[in\, string],
			objPass,
			aafCharacter_constptr,
			pPath,
			String key to identify the new essence within container,
			
			[in],
			objPass,
			aafMobID_constptr,
			pMobID,
			Optional mobID identifying the essence,

			[out\, retval],
			objOut,
			AAFEssenceStream,
			ppEssenceStream,
			address of local variable to contain the essence stream pointer.,

			Attempt to create an essence stream in the container 
  /// for writing.
  /// Returns one of the following:
  ///
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - both pName and pMobID cannot be NULL.
  ///
  /// AAFRESULT_ILLEGAL_VALUE
  ///   - pName or pMobID \(or both\) are invalid
  ///
  /// AAFRESULT_FILE_EXISTS
  ///   - the given path and or mobID  already points to an existing stream 
  ///     within the container.)


AD_XMETHOD3(OpenEssenceStreamReadOnly,
			[in\, string],
			objPass,
			aafCharacter_constptr,
			pFilePath,
			String key to identify the existing essence within container,
			
			[in],
			objPass,
			aafMobID_constptr,
			pMobID,
			Optional mobID identifying the essence,

			[out\, retval],
			objOut,
			AAFEssenceStream,
			ppEssenceStream,
			address of local variable to contain the essence stream pointer.,

			Attempt to open an essence stream for reading.
  /// Returns one of the following:
  ///
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - both pName and pMobID cannot be NULL.
  ///
  /// AAFRESULT_ILLEGAL_VALUE
  ///   - pName or pMobID \(or both\) are invalid
  ///
  /// AAFRESULT_MEDIA_NOT_FOUND
  ///   - the given path does not point to an existing stream within 
  ///     the container.
  ///
  /// AAFRESULT_NOT_READABLE
  ///   - stream is write-only\, cannot be opened for reading.)


AD_XMETHOD3(OpenEssenceStreamAppend,
			[in\, string],
			objPass,
			aafCharacter_constptr,
			pFilePath,
			String key to identify the existing essence within container,
			
			[in],
			objPass,
			aafMobID_constptr,
			pMobID,
			Optional mobID identifying the essence,

			[out\, retval],
			objOut,
			AAFEssenceStream,
			ppEssenceStream,
			address of local variable to contain the essence stream pointer.,

			Attempt to open an essence stream for appending.
  /// Returns one of the following:
  ///
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - both pName and pMobID cannot be NULL.
  ///
  /// AAFRESULT_ILLEGAL_VALUE
  ///   - pName or pMobID \(or both\) are invalid
  ///
  /// AAFRESULT_MEDIA_NOT_FOUND
  ///   - the given path does not point to an existing stream within 
  ///     the container.
  ///
  /// AAFRESULT_NOT_WRITEABLE
  ///   - stream is read-only\, cannot be opened for writing.)
AD_XCLASS_END(Abstract, Transient)
