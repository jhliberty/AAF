#c *********************************************************************
#c
#c $Id: AAFTypeDefIndirect.dod,v 1.7 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFTypeDefIndirect\
#endm
#c
#startm .parent-module 0
AAFTypeDef\
#endm
#c
#import ./AAFTypeDef.exp
AD_HEAD
AD_IDL(///
/// This interface is used to define Integer types used in AAF persistent
/// objects.
AD_STD_COMMENT_IFC_HEADER)
AD_FORWARD_DECLARATION(AAFPropertyValue)

AD_CLASS_UUID(FE717CA7, F04C, 11d3, 80, 0B, 00, 10, 4B, C9, 15, 6D)

AD_DEFAULT_UUID(FE717CA8, F04C, 11d3, 80, 0B, 00, 10, 4B, C9, 15, 6D)
AD_XCLASS_BEGIN(Concrete, StoredObject)


AD_XMETHOD2(CreateValueFromActualValue,
			[in],
			objIn,
			AAFPropertyValue,
			pActualValue,
			pointer to actual value,

			[out],
			objOut,
			AAFPropertyValue,
			ppIndirectPropertyValue,
			newly created property value,

     Creates an indirect property value which contains the actual type.  
  /// Returns the newly-created property value in ppIndirectPropertyValue.
  ///
  /// Succeeds if all of the following are true:
  /// - the pActualValue pointer is valid.
  /// - the ppIndirectPropertyValue pointer is valid.
  ///
  /// If this method fails nothing will be written to *ppIndirectPropertyValue.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either pActualValue or ppIndirectPropertyValue\)
  ///
  /// AAFRESULT_ILLEGAL_VALUE
  ///   - initDataSize indicates pInitData is of the wrong size.
  ///
  /// AAFRESULT_NOT_REGISTERED
  ///  - struct offsets have not yet been registered for this typedef.)

AD_XMETHOD4(CreateValueFromActualData,
		[in],
		objIn,
		AAFTypeDef,
		pActualType,
		the actual type of the data,

		[in\, size_is\(initDataSize\)],
		objPass,
		aafMemPtr_t,
		pInitData,
		pointer to buffer containing data to use,

		[in],
		objPass,
		aafUInt32,
		initDataSize,
		size of data in pInitData,

		[out],
		objOut,
		AAFPropertyValue,
		ppIndirectPropertyValue,
		newly created property value,

     Creates an indirect property value which contains data of the 
  /// actual type.  Returns the newly-created property value in
  /// ppIndirectPropertyValue.
  ///
  /// Succeeds if all of the following are true:
  /// - the pActualType pointer is valid and registered
  /// - the pInitData pointer is valid.
  /// - the ppIndirectPropertyValue pointer is valid.
  /// - initDataSize indicates pInitData is the correct size for 
  ///   the actual type.
  /// - compile-time struct has had its member offests registered.
  ///
  /// If this method fails nothing will be written to *ppIndirectPropertyValue.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either pActualType or InitData or ppIndirectPropertyValue\)
  ///
  /// AAFRESULT_ILLEGAL_VALUE
  ///   - initDataSize indicates pInitData is of the wrong size.
  ///
  /// AAFRESULT_NOT_REGISTERED
  ///  - struct offsets have not yet been registered for this typedef.)


AD_XMETHOD2(GetActualValue,
		[in],
		objIn,
		AAFPropertyValue,
		pIndirectPropertyValue,
		indirect property value to read,

		[out],
		objOut,
		AAFPropertyValue,
		ppActualPropertyValue,
		value that is read,

     Gets a property value corresponding to the actual data. 
  /// 
  /// Succeeds if:
  /// - Initialize\(\) has already been called on this object.
  /// - The pIndirectPropertyValue pointer is valid.
  /// - The ppActualPropertyValue pointer is valid.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either pIndirectPropertyValue or ppActualPropertyValue\)
  ///
  /// AAFRESULT_ILLEGAL_VALUE
  ///   - initDataSize indicates pInitData is of the wrong size.
  ///
  /// AAFRESULT_NOT_REGISTERED
  ///  - struct offsets have not yet been registered for this typedef.)
  ///)

AD_XMETHOD2(GetActualSize,
			[in],
			objIn,
			AAFPropertyValue,
			pIndirectPropertyValue,
			indirect property value to read,
			
			[out],
			objPass,
			aafUInt32 *,
			pActualSize,
			actual data size,
			Return the size of the actual data withing the indirect property value.
  ///
  ///
  /// Succeeds if all of the following are true:
  /// - the pIndirectPropertyValue pointer is valid.
  /// - the pActualSize pointer is valid.
  ///
  /// If this method fails nothing will be written to *pActualSize.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either pIndirectPropertyValue or pActualSize\)
  ///
  /// AAFRESULT_ILLEGAL_VALUE
  ///   - the type of pIndirectPropertyValue was not indirect. 
  ///
  /// AAFRESULT_TYPE_NOT_FOUND
  ///   - the actual type cannot be found in the dictionary.
  ///
  /// AAFRESULT_NOT_REGISTERED
  ///  - struct offsets have not yet been registered for 
  ///    the actual typedef.)
AD_XMETHOD2(GetActualType,
			[in],
			objIn,
			AAFPropertyValue,
			pIndirectPropertyValue,
			indirect property value to read,
			
			[out],
			objOut,
			AAFTypeDef,
			pActualType,
			the type definition of the actual data,
			Return the type definition of the  actual data within the indirect property value.
  ///
  ///
  /// Succeeds if all of the following are true:
  /// - the pIndirectPropertyValue pointer is valid.
  /// - the pActualType pointer is valid.
  ///
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either pIndirectPropertyValue or pActualType\)
  ///
  /// AAFRESULT_ILLEGAL_VALUE
  ///   - the type of pIndirectPropertyValue was not indirect. 
  ///
  /// AAFRESULT_TYPE_NOT_FOUND
  ///   - the actual type cannot be found in the dictionary.
  ///
  /// AAFRESULT_NOT_REGISTERED
  ///  - struct offsets have not yet been registered for 
  ///    the actual typedef.)

AD_XMETHOD3(GetActualData,
			[in],
			objIn,
			AAFPropertyValue,
			pPropVal,
			indirect property value to read,
			
			[out\, size_is\(dataSize\)],
			objPass,
			aafMemPtr_t,
			pData,
			buffer into which actual data should be written,

			[in],
			objPass,
			aafUInt32,
			dataSize,
			size of pData buffer in bytes,

     Copies all the actual data contained in the given indirect property value\,
  /// interpreted as the actual type for this indirect property value\, into the 
  /// buffer pointed to by pData.
  ///
  /// Succeeds if all of the following are true:
  /// - the pPropVal pointer is valid.
  /// - the pData pointer is valid.
  /// - dataSize indicates pData is large enough to hold the data.
  ///
  /// If this method fails nothing will be written to *ppPropVal.
  AD_STD_COMMENT_METH_ERR_HEADER
  AD_STD_COMMENT_METH_ERR_NO_INIT
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(either pPropVal or pData\)
  ///
  /// AAFRESULT_ILLEGAL_VALUE
  ///   - dataSize indicates pData is too small.
  ///
  /// AAFRESULT_TYPE_NOT_FOUND
  ///   - the actual type cannot be found in the dictionary.
  ///
  /// AAFRESULT_NOT_REGISTERED
  ///  - struct offsets have not yet been registered for 
  ///    the actual typedef.)

AD_OVERRIDE(.method-GetTypeCategory)

AD_XCLASS_END(Concrete, StoredObject)
