#c *********************************************************************
#c
#c $Id: AAFFileDescriptor.dod,v 1.29 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFFileDescriptor\
#endm
#c
#startm .parent-module 0
AAFEssenceDescriptor\
#endm
#c
#c #import ./AAFEssenceDescriptor.exp
#import ./AAFFileDescriptor2.exp
AD_HEAD
AD_IDL(///
/// IAAFFileDescriptor is DEPRECATED\, please use IAAFFileDescriptor2
///
/// The IAAFFileDescriptor interface is implemented by objects which
/// describe the format of the content data associated with a File
/// Source mob or the media associated with a Physical Source mob.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///
/// AAFRESULT_NOT_INITIALIZED
///   - This object has not yet had Initialize\(\) called on it through
///     this object's primary interface.  Note that IAAFFileDescriptor
///     is a primary interface for an abstract class\, so it is not
///     appropriate for the Initialize\(\) method to exist in this
///     interface.  The Initialize\(\) method is available through the
///     concrete object's primary interface.
///)
AD_CLASS_UUID(e58a8562, 2a3e, 11D2, bf, a4, 00, 60, 97, 11, 62, 12)

AD_DEFAULT_UUID(e58a8561, 2a3e, 11D2, bf, a4, 00, 60, 97, 11, 62, 12)
AD_COM_EXT_CLASS_BEGIN(public IAAFFileDescriptor2)
AD_XMETHOD1(SetLength,
			[in],
			  objPass,
			  aafLength_t,
			  length,
			  length of the essence in samples,
			Sets the length of the essence in samples [not edit units].
  /// 
  /// Always succeeds.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\))


AD_XMETHOD1(GetLength,
			[out],
			  objPass,
			  aafLength_t *,
			  pLength,
			  returns length of the essence in samples,
			Gets the length of the essence in samples [not edit units].
  ///
  /// Succeeds if all of the following are true:
  /// - the pLength pointer is valid.
  /// 
  /// If this method fails nothing will be written to *pLength.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pLength arg is NULL.)


AD_XMETHOD1(SetCodecDef,
			[in],
			  objIn,
			  AAFCodecDef,
			  codecDef,
			  Which codec was used,
			Set to the exact codec which was used as a hint.
  /// 
  /// Always succeeds.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\))


AD_XMETHOD1(GetCodecDef,
			[out],
			  objOut,
			  AAFCodecDef,
			  pCodecDef,
			  Which codec was used,
			Get to the exact codec which was used as a hint.
  ///
  /// Succeeds if all of the following are true:
  /// - the pCodecDef pointer is valid.
  /// - the CodecDefinition identifying the codec is
  ///   present in the dictionary.
  /// 
  /// If this method fails nothing will be written to *pCodecDef.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pCodecDef arg is NULL.
  ///
  /// AAFRESULT_OBJECT_NOT_FOUND
  ///   - the CodecDefinition identifying the codec is not
  ///     in the dictionary.)


AD_XMETHOD1(SetSampleRate,
			[in],
			  objPass,
			  aafRational_constref,
			  rate,
			  sample rate of the essence,
			Sets sample rate of the essence as opposed to the edit rate.
  /// 
  /// If this method fails the sample rate property will not be
  /// changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\))


AD_XMETHOD1(GetSampleRate,
			[out],
			  objPass,
			  aafRational_t*,
			  pRate,
			  sample rate of the essence,
			Gets sample rate of the essence as opposed to the edit rate. and
  /// writes it into the *pRate argument.
  ///
  /// Succeeds if all of the following are true:
  /// - the pRate pointer is valid.
  /// 
  /// If this method fails nothing will be written to *pRate.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pRate arg is NULL.)


AD_XMETHOD1(SetContainerFormat,
			[in],
			  objIn,
			  AAFContainerDef,
			  format,
			  file format,
			Identifies the file format.  The container format is an optional
  /// property.
  /// 
  /// If this method fails the container format property will not be
  /// changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\))


AD_XMETHOD1(GetContainerFormat,
			[out],
			  objOut,
			  AAFContainerDef,
			  pFormat,
  			  Optional,
			Identifies the file format.
  ///
  /// Succeeds if all of the following are true:
  /// - the pFormat pointer is valid.
  /// - the ContainerDefinition identifying the file format is
  ///   present in the dictionary.
  /// 
  /// If this method fails nothing will be written to *pFormat.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pFormat arg is NULL.
  ///
  /// AAFRESULT_OBJECT_NOT_FOUND
  ///   - the ContainerDefinition identifying the file format is not
  ///     in the dictionary.)

#c AAFFileDescriptor2 methods
#c

AD_COM_METH(.method-SetLinkedSlotID)
AD_COM_METH(.method-GetLinkedSlotID)

AD_COM_EXT_CLASS_END(AAFFileDescriptor2)
