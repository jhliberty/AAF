#c *********************************************************************
#c
#c $Id: AAFEssenceGroup.dod,v 1.28 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFEssenceGroup\
#endm
#c
#startm .parent-module 0
AAFSegment\
#endm
#c
#c #import ./AAFSegment.exp
AD_HEAD
AD_IDL(///
/// This interface provides access to the IAAFEssenceGroup interface\,
/// which contains multiple representations of the same media within a
/// MasterMob.  The IAAFEssenceAccess methods allow specifying
/// parameters such as "best quality"\, or "lowest frame rate" for and
/// follow the correct path through the EssenceGroup in order to find
/// the media which matches the criteria.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///)
AD_FORWARD_DECLARATION(AAFSourceClip)
AD_FORWARD_DECLARATION(AAFDataDef)
AD_CLASS_UUID(e58a8568, 2a3e, 11D2, bf, a4, 00, 60, 97, 11, 62, 12)

AD_DEFAULT_UUID(e58a8567, 2a3e, 11D2, bf, a4, 00, 60, 97, 11, 62, 12)
AD_XCLASS_BEGIN(Concrete, StoredObject)
AD_XMETHOD1(SetStillFrame,
[in], objIn, AAFSourceClip, pStillFrame,Still Frame source clip ,
     This method sets the still frame property on a essence group to
  /// be the source clip passed as the stillFrame argument.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pStillFrame is null.
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.)
    

AD_XMETHOD1(GetStillFrame,
[out], objOut, AAFSourceClip, ppStillFrame,Still Frame source clip ,
     Gets the still frame property on a essence group.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - ppStillFrame is null.
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.)


AD_XMETHOD1(AppendChoice,
[in], objIn, AAFSegment, pChoice,Source clip to add as a choice ,
     Append another choice to this AAFEssenceGroup.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pChoice pointer is valid.
  /// 
  /// If this method fails no state will be changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pChoice is null.)


AD_XMETHOD1(PrependChoice,
			[in],
			objIn,
			AAFSegment,
			pChoice,
			Source clip to add as a choice,

			Prepend another choice to this AAFEssenceGroup.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pChoice pointer is valid.
  /// 
  /// If this method fails no state will be changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pChoice is null.)


AD_XMETHOD2(InsertChoiceAt,

			[in],
			objPass,
			aafUInt32,
			index,
			place to insert new choice,

			[in],
			objIn,
			AAFSegment,
			pChoice,
			Source clip to add as a choice,

     Insert another choice to this AAFEssenceGroup at the given
  /// index.  Choices already existing at the given and higher indices
  /// will be moved up by one index to accommodate.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pChoice pointer is valid.
  /// - index is less than or equal to the value returned by
  ///   CountChoices\(\).
  /// 
  /// If this method fails no state will be changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pChoice is null.
  ///
  /// AAFRESULT_BADINDEX
  ///   - index is greater than the value returned by
  ///     CountChoices\(\).)


AD_XMETHOD1(CountChoices,
[out], objPass, aafUInt32* , pCount,The number of representations contained within.,
     Returns the number of choices attached to this AAFEssenceGroup.\,
  /// excepting the still frame.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pCount pointer is valid.
  /// 
  /// If this method fails nothing is written to *pCount.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pCount is null.)


AD_XMETHOD2(GetChoiceAt,
[in], objPass, aafUInt32, index,The 0-based index into the array,
[out], objOut, AAFSegment , ppChoice,The representation at that index,
     Given an index\, returns the corresponding source clip choice.
  /// 
  /// Succeeds if all of the following are true:
  /// - the ppChoice pointer is valid.
  /// 
  /// If this method fails nothing will be written to *ppChoice.
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_MISSING_INDEX
  ///   - The given index value is not present.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - ppChoice arg is NULL.)


AD_XMETHOD1(RemoveChoiceAt,

			[in],
			objPass,
			aafUInt32,
			index,
			The 0-based index into the array,

     Removes the choice at the given index.  Items already existing at
  /// higher indices will be moved down by one index to accommodate.
  /// 
  /// Succeeds if all of the following are true:
  /// - the ppChoice pointer is valid.
  /// - index is less than the value returned by CountChoices\(\).
  /// 
  /// If this method fails no state will be changed.
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - ppChoice arg is NULL.
  ///
  /// AAFRESULT_BADINDEX
  ///   - index is greater than or equal to the value returned by
  ///     CountChoices\(\).)
AD_XCLASS_END(Concrete, StoredObject)
