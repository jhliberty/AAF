#c *********************************************************************
#c
#c $Id: AAFScopeReference.dod,v 1.18 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFScopeReference\
#endm
#c
#startm .parent-module 0
AAFSegment\
#endm
#c
AD_HEAD
AD_IDL(///
/// This interface is used with an object representing a reference to a
/// segment on another slot of this scope \(AAFNestedScope or AAFMob\)
/// or an enclosing scope.  Scope references are specified in terms of
/// a relative slot offset\, and the number of scopes to skip outward.
/// For example a slot offset of 1 and a scope of 0 means to look 1
/// track back in the current scope.  A slot offset of 1 and a scope of
/// 1 means to look one slot lower in the enslosing scope.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///)
AD_INCLUDE(AAFTypes)
AD_CLASS_UUID(e44be454, 2099, 11d2, bf, 98, 00, 60, 97, 11, 62, 12)

AD_DEFAULT_UUID(e44be453, 2099, 11d2, bf, 98, 00, 60, 97, 11, 62, 12)
AD_XCLASS_BEGIN(Concrete, StoredObject)
AD_METHOD2(Create,
			[in],
			aafUInt32,
			RelativeScope,
       Number of nested scopes to pass to find the Nested Scope slot,
			[in],
			aafUInt32,
			RelativeSlot,
       Number of slots to look backwards from the slot containing the
  /// Scope Reference,
			Constructs a Scope Reference object.
  /// 
  /// If this method fails the length property will not be
  /// changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\\\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \\\(This is the only code indicating success.\\\))

AD_XMETHOD3(Initialize,
			[in],
			objIn,
			AAFDataDef,
			pDataDef,
       Data definition for referenced slot,

			[in],
			objPass,
			aafUInt32,
			RelativeScope,
       Number of nested scopes to pass to find the Nested Scope slot,

			[in],
			objPass,
			aafUInt32,
			RelativeSlot,
       Number of slots to look backwards from the slot containing the
  /// Scope Reference,
			Constructs a Scope Reference object.
  /// 
  /// If this method fails the length property will not be
  /// changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\))

AD_METHOD1(GetRelativeScope,
		   [retval][out],
		   aafUInt32 *,
		   pnRelativeScope,
		   Pointer to a Relative Scope,
     Gets the number of nested scopes to pass to find the Nested Scope
  /// slot.
  ///	
  /// Succeeds if all of the following are true:
  /// - the pnRelativeScope pointer is valid.
  /// 
  /// If this method fails nothing will be written to *pnRelativeScope.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\\\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \\\(This is the only code indicating success.\\\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pnRelativeScope arg is NULL.)


AD_METHOD1(GetRelativeSlot,
		   [retval][out],
		   aafUInt32 *,
		   pnRelativeSlot,
		   Pointer to a Relative Slot,
     Gets the number of slots that preced the slot containing the
  /// Scope Reference. 
  ///	
  /// Succeeds if all of the following are true:
  /// - the pnRelativeScope pointer is valid.
  /// 
  /// If this method fails nothing will be written to *pnRelativeSlot.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\\\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \\\(This is the only code indicating success.\\\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pnRelativeSlot arg is NULL.)
AD_XCLASS_END(Concrete, StoredObject)
