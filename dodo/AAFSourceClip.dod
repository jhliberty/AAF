#c *********************************************************************
#c
#c $Id: AAFSourceClip.dod,v 1.30 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFSourceClip\
#endm
#c
#startm .parent-module 0
AAFSourceReference\
#endm
#c
#c #import ./AAFSourceReference.exp
AD_HEAD
AD_IDL(///
/// The IAAFSourceClip interface is implemented by objects that
/// reference the content data and identify the source of the content
/// data.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///)
AD_FORWARD_DECLARATION(AAFDataDef)
AD_FORWARD_DECLARATION(AAFMob)
AD_CLASS_UUID(38e6f8a5, 2a2c, 11d2, 84, 11, 00, 60, 08, 32, ac, b8)

AD_DEFAULT_UUID(38e6f8a7, 2a2c, 11d2, 84, 11, 00, 60, 08, 32, ac, b8)
AD_XCLASS_BEGIN(Concrete, StoredObject)
AD_XMETHOD3(Initialize,
			[in],
				objIn,
				AAFDataDef,
				pDataDef,
				Data Definition object,
			[in],
				objPass,
				aafLength_constref,
				length,
				Length property value,
			[in],
				objPass,
				aafSourceRef_t,
				sourceRef,
				Source Reference,
			This method initializes a source clip object with
  /// the given properties.  Only required properties are set.
  /// Optional properties are added with separate functions.
  ///
  /// Succeds if:
  /// - This object has not already been Initialize\(\)d.
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_ALREADY_INITIALIZED
  ///   - Initialize\(\) has already been called on this object.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pDataDef argument is NULL.)


AD_XMETHOD6(GetFade,
			[out],
			objPass,
			aafLength_t *,
			pFadeInLen,
			Fade In Length,
			[out],
			objPass,
			aafFadeType_t *,
			pFadeInType,
			Fade In Type,
			[out],
			objPass,
			aafBoolean_t *,
			pFadeInPresent,
			Fade In Type,
			[out],
			objPass,
			aafLength_t *,
			pFadeOutLen,
			Fade Out Length,
			[out],
			objPass,
			aafFadeType_t *,
			pFadeOutType,
			Fade Out Type,
			[out],
			objPass,
			aafBoolean_t *,
			pFadeOutPresent,
			Fade In Type,
			This function returns the optional fade information from a
  /// source clip.  This function only applies to audio source clips.
  /// Length units are specified by the containing mob slot's edit
  /// rate.
  ///
  /// Succeeds if all of the following are true:
  /// - This object has already been Initialize\(\)d.
  /// - the all argument pointers are valid.
  /// 
  /// If this method fails nothing will be written to any of the
  /// locations specified by the arguments.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - any argument is NULL.)


AD_XMETHOD1(ResolveRef,
			[out],
			objOut,
			AAFMob,
			ppMob,
			Referenced mob,
			Given a source clip object\, this function returns a pointer
  /// to the mob that it references.
  ///
  /// The returned mob is AddRef\(\)ed before it is returned.
  ///
  /// Succeeds if all of the following are true:
  /// - This object has already been Initialize\(\)d.
  /// - the ppMob pointer is valid.
  /// 
  /// If this method fails nothing will be written to *ppMob.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - ppMob arg is NULL.
  ///
  /// AAFRESULT_MOB_NOT_FOUND
  ///   - this mob does not exist.)


AD_XMETHOD1(GetSourceReference,
			[out],
			objPass,
			aafSourceRef_t *,
			pSourceRef,
			Source Reference,
			This function returns the source reference of this source clip.
  ///
  /// Note: the 3 properties of a source Clip that make up the "source
  /// reference" are sourceID\, sourceTrackID\, and startTime.
  ///
  /// Succeeds if all of the following are true:
  /// - This object has already been Initialize\(\)d.
  /// - the pSourceRef pointer is valid.
  /// 
  /// If this method fails nothing will be written to *pSourceRef.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pSourceRef arg is NULL.)


AD_XMETHOD4(SetFade,
		   [in],
		   		objPass,
				aafInt32,
				fadeInLen,
				Fade In Length,
		   [in],
		   		enumIn,
				aafFadeType_t,
				fadeInType,
				Fade In Type,
		   [in],
		   		objPass,
				aafInt32,
				fadeOutLen,
				Fade Out Length,
		   [in],
		   		enumIn,
				aafFadeType_t,
				fadeOutType,
				Fade Out Type,
		  This function sets the optional fade properties on this source
  /// clip object.  The fade properties only apply to a source clip of
  /// data definition \(or convertible to a data definition\) of type
  /// Sound.  All arguments should be specified.  Length units are
  /// specified by the containing mob slot's edit rate.
  /// 
  /// Succeeds if all of the following are true:
  /// - This object has already been Initialize\(\)d.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.)


AD_METHOD1(SetSourceReference,
		   [in],
				aafSourceRef_t,
				sourceRef,
				Source Reference,
		   This function sets the source reference of this source clip.
  ///
  /// Note: the  3 properties of a source Clip that make up the "source
  /// reference" are sourceID\\\, sourceTrackID\\\, and startTime.
  /// 
  /// Succeeds if all of the following are true:
  /// - This object has already been Initialize\\\(\\\)d.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\\\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \\\(This is the only code indicating success.\\\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\\\(\\\) called on it.)
AD_XCLASS_END(Concrete, StoredObject)
