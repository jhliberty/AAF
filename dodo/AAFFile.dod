#c *********************************************************************
#c
#c $Id: AAFFile.dod,v 1.26 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFFile\
#endm
#startm .parent-module 0
AAFRoot\
#endm
#c
AD_HEAD
AD_IDL(///
/// This interface is used with an object representing an AAF file.
///
/// Any filesystem file can be opened for reading by multiple
/// IAAFFile-supporting objects.
///
/// It is not recommended to Close an IAAFFile-implementing object
/// which contains objects to which outstanding references are held in
/// client code.  Nevertheless\, even if that is done\, the Close\(\)
/// method will succeed and all referenced objects will be put into a
/// Detached state in which may cause any methods on such objects to
/// fail with the error status of AAFRESULT_NOT_IN_FILE.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///)
AD_FORWARD_DECLARATION(AAFHeader)
AD_CLASS_UUID(9346ACD2, 2713, 11d2, 80, 35, 00, 60, 08, 14, 3E, 6F)

AD_DEFAULT_UUID(9346ACD3, 2713, 11d2, 80, 35, 00, 60, 08, 14, 3E, 6F)
AD_XCLASS_BEGIN(Concrete, Transient)
AD_METHOD0(Open,
     Associates this IAAFFile-supporting object with the storage to
  /// which it is to be associated.  It will then be possible to access
  /// objects within this file.
  ///
  /// This method will succeed only if all of the following are true:
  /// - This object has not already been opened.
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_ALREADY_OPEN
  ///   - This object has already been Open\(\)ed.)


AD_XMETHOD1(SaveCopyAs,

			[in],
			objIn,
			AAFFile,
			pDestFile,
			File to recieve contents,

     Copies the contents of this file to *pDestFile.  Requires that
  /// *pDestFile be open\, writeable or modifiable\, and not yet
  /// contain any objects.
  ///
  /// NOTE! Stub only.   Implementation not yet added.
  ///
  /// Succeeds if:
  /// - This object is currently open.
  /// - The named filesystem file is writable.
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_OPEN
  ///   - This object is not open.
  ///
  /// AAFRESULT_NOT_WRITEABLE
  ///   - The named file cannot be written.)


AD_XMETHOD1(GetHeader,
			[out\, retval],
			objOut,
			AAFHeader,
			ppHeader,
			Set to header of the current file,
			Returns the IAAFHeader-supporting object associated with this
  /// file.  If this object has never been associated with a file\, a
  /// new empty IAAFHeader-supporting object will be created and
  /// returned.  The returned header is AddRef\(\)ed before it is
  /// returned.  Note that the header is automatically created when the
  /// file object is created.
  ///
  /// Succeeds if:
  /// - This object has already been Initialize\(\)d.
  /// - This file object is open.
  /// - the given header pointer is valid.
  /// - this object contains a header.
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.
  ///
  /// AAFRESULT_NOT_OPEN
  ///   - This object is not open.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - the header pointer arg is NULL.
  ///
  /// AAFRESULT_NO_HEADER
  ///   - this object contains no header.)


AD_XMETHOD1(GetRevision,
			[out\, retval],
			objPass,
			aafFileRev_t *,
			pRev,
			Revision of the current file,
			Get the revision of the current AAF file\, and returns it in pRev.
  ///
  /// Succeeds if:
  /// - This object has already been Initialize\(\)d.
  /// - the given revision pointer is valid.
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_INITIALIZED
  ///   - This object has not yet had Initialize\(\) called on it.
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - the revision pointer arg is NULL.
  ///
  /// AAFRESULT_NOT_OPEN
  ///   - This object is not open.)


AD_METHOD0(Save,
     If this IAAFFile-supporting object is open\, all unsaved changes
  /// made to the contents of this object are saved.
  ///
  /// This method will succeed only if all of the following are true:
  /// - This object is currently open.
  /// - Sufficient space remains in the storage for the data to be
  ///   written.
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_OPEN
  ///   - This object is not open.
  ///
  /// AAFRESULT_WRONG_OPENMODE
  ///   - This object is not open for writing or modification.
  ///
  /// AAFRESULT_INSUFFICIENT_SPACE
  ///   - There is insufficient space in the storage to save the
  ///     contents of this object.)


AD_METHOD0(Close,
     Dissociates this IAAFFile-supporting object from its
  /// currently-associated storage.  Any AAF objects which were
  /// contained within this object will then no longer be available to
  /// the client.
  ///
  /// If the client is maintaining any references to any objects which
  /// are contained in this object\, those objects will be marked as
  /// dissociated\, and methods on them will fail.
  ///
  /// Any unsaved changes will be written to the file before the Close
  /// operation is complete.
  ///
  /// This method will succeed only if all of the following are true:
  /// - This object is currently open.
  ///
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NOT_OPEN
  ///   - This object is not already open.)

AD_XMETHOD1(GetDictionary,
			[out\, retval],
			objOut,
			AAFDictionary,
			ppDictionary,
			The AAF Dictionary,
     Places the dictionary that contains all types of aaf definition
  /// objects into the *ppDictionary argument.  The returned dictionary
  /// is AddRef\(\)ed before it is returned.  Note that the dictionary
  /// is automatically created when the header object is created.
  /// 
  /// Succeeds if all of the following are true:
  /// - the ppDictionary pointer is valid.
  /// 
  /// If this method fails no state will be changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - ppDictionary is null.)

AD_XCLASS_END(Concrete, Transient)
