#c *********************************************************************
#c
#c $Id: AAFComponent.dod,v 1.29 2009/06/01 11:46:49 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFComponent\
#endm
#c
#startm .parent-module 0
AAFObject\
#endm
#c
#c #import ./AAFObject.exp
#import ./AAFComponent2.exp
AD_HEAD
AD_IDL(///
/// IAAFComponent is DEPRECATED\, please use IAAFComponent2.
///
/// The component class represents an essence element.  A Component is
/// an abastract class with two subclasses: Segment and Transition.
/// The GetLength and SetLength only aplies to time-varying media and
/// it is an  optional property. Non time-varying objects DO NOT
/// support this property.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///
/// AAFRESULT_NOT_INITIALIZED
///   - This object has not yet had Initialize\(\) called on it through
///     this object's primary interface.  Note that IAAFComponent is a
///     primary interface for an abstract class\, so it is not
///     appropriate for the Initialize\(\) method to exist in this
///     interface.  The Initialize\(\) method is available through the
///     concrete object's primary interface.
///)
AD_FORWARD_DECLARATION(AAFDataDef)
AD_FORWARD_DECLARATION(AAFKLVData)
AD_FORWARD_DECLARATION(EnumAAFKLVData)

AD_CLASS_UUID(38e6f8a0, 2a2c, 11d2, 84, 11, 00, 60, 08, 32, ac, b8)

AD_DEFAULT_UUID(38e6f8a1, 2a2c, 11d2, 84, 11, 00, 60, 08, 32, ac, b8)
AD_COM_EXT_CLASS_BEGIN(public IAAFComponent2)
AD_METHOD1(SetLength,
		   [in],
		   aafLength_constref,
		   length,
		   The duration in edit units of this component,
		   Sets the length property value on this component object.
  /// 
  /// Succeeds if all of the following are true:
  /// - the optional length property is present for this object.
  ///
  /// This method deals with an optional property\\\, which will only be
  /// present for time-varying media.
  /// 
  /// If this method fails the length property will not be
  /// changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\\\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \\\(This is the only code indicating success.\\\)
  ///
  /// AAFRESULT_BAD_PROP
  ///   - the optional length property is not present for this object.)


AD_METHOD1(GetLength,
		   [retval][out],
		   aafLength_t *,
		   pLength,
		   Length of this component,
		   Gets the duration in edit units of this component.
  ///	
  /// Succeeds if all of the following are true:
  /// - the pLength pointer is valid.
  /// - the optional length property is present for this object.
  ///
  /// This method deals with an optional property\\\, which will only be
  /// present for time-varying media.
  /// 
  /// If this method fails nothing will be written to *pLength.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\\\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \\\(This is the only code indicating success.\\\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pLength arg is NULL.
  ///
  /// AAFRESULT_BAD_PROP
  ///   - the optional length property is not present for this object.)
	

AD_XMETHOD1(SetDataDef,
			[in],
			objIn,
			AAFDataDef,
			pDataDef,
			DataDef of this object,
			Sets the data definition property AUID on this component.
  /// 
  /// If this method fails the Data Definition property will not be
  /// changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  AD_STD_COMMENT_METH_ERR_NULL_PARAM\(pDataDef\))


AD_XMETHOD1(GetDataDef,
			[out\, retval],
			objOut,
			AAFDataDef,
			ppDatadef,
			DataDef of this object,
			Returns data definition object.
  ///
  /// Succeeds if all of the following are true:
  /// - the ppDatadef pointer is valid.
  /// 
  /// If this method fails nothing will be written to *ppDatadef.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - ppDatadef arg is NULL.)

AD_XMETHOD1(AppendKLVData,
			[in],
			objIn,
			AAFKLVData,
			pData,
			KLV object,
			Appends a pre-existing KLV Data object to the specified
  /// component.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pKLV pointer is valid.
  /// 
  /// If this method fails no state will be changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - the pData arg is NULL.)


AD_XMETHOD1(CountKLVData,
			[out],
			objPass,
			aafUInt32 *,
			pNumData,
			Number  of KLV data objects,
			Return total number of KLV data objects attached to this component.
  ///
  /// Succeeds if all of the following are true:
  /// - the pNumData pointer is valid.
  /// 
  /// If this method fails nothing will be written to *pNumComments.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pNumData arg is NULL.)


AD_XMETHOD1(GetKLVData,
			[out],
			objOut,
			EnumAAFKLVData,
			ppEnum,
			KLV data objects,
			Return the enumeration for all KLV data objects on this component.  The returned
  /// enumerator is AddRef\(\)ed before it is returned.  The enumerator
  /// is implemented as a EnumAAFKLVData.
  /// 
  /// Succeeds if all of the following are true:
  /// - the ppEnum pointer is valid.
  /// 
  /// If this method fails nothing will be written to *ppEnum.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - ppEnum is null.)


AD_XMETHOD1(RemoveKLVData,
			[in],
			objIn,
			AAFKLVData,
			pData,
			KLV data object to remove,
			Removes the given KLV data object from this component.
  /// 
  /// Succeeds if all of the following are true:
  /// - the pData pointer is valid.
  /// - the given KLV data object is present in the component.
  /// 
  /// If this method fails no state will be changed.
  /// 
  /// This method will return the following codes.  If more than one of
  /// the listed errors is in effect\, it will return the first one
  /// encountered in the order given below:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pData is null.
  ///
  /// AAFRESULT_OBJECT_NOT_FOUND
  ///   - the given KLV data object is not in this component.)

#c
#c AAFComponent2 methods
#c

AD_COM_METH(.method-AppendComment)
AD_COM_METH(.method-CountComments)
AD_COM_METH(.method-GetComments)
AD_COM_METH(.method-RemoveComment)
AD_COM_METH(.method-AppendAttribute)
AD_COM_METH(.method-CountAttributes)
AD_COM_METH(.method-GetAttributes)
AD_COM_METH(.method-RemoveAttribute)

AD_COM_EXT_CLASS_END(AAFComponent2)

