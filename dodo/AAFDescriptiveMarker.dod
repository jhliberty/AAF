#c *********************************************************************
#c
#c $Id: AAFDescriptiveMarker.dod,v 1.5 2009/06/01 11:46:50 stuart_hc Exp $ $Name: V116 $
#c
#c The contents of this file are subject to the AAF SDK Public Source
#c License Agreement Version 2.0 (the "License"); You may not use this
#c file except in compliance with the License.  The License is available
#c in AAFSDKPSL.TXT, or you may obtain a copy of the License from the
#c Advanced Media Workflow Association, Inc., or its successor.
#c
#c Software distributed under the License is distributed on an "AS IS"
#c basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.  See
#c the License for the specific language governing rights and limitations
#c under the License.  Refer to Section 3.3 of the License for proper use
#c of this Exhibit.
#c
#c WARNING:  Please contact the Advanced Media Workflow Association,
#c Inc., for more information about any additional licenses to
#c intellectual property covering the AAF Standard that may be required
#c to create and distribute AAF compliant products.
#c (http://www.amwa.tv/policies).
#c
#c Copyright Notices:
#c The Original Code of this file is Copyright 1998-2009, licensor of the
#c Advanced Media Workflow Association.  All rights reserved.
#c
#c The Initial Developer of the Original Code of this file and the
#c licensor of the Advanced Media Workflow Association is
#c Avid Technology.
#c All rights reserved.
#c
#c *********************************************************************
#startm .this-module 0
AAFDescriptiveMarker\
#endm
#c
#startm .parent-module 0
AAFCommentMarker\
#endm
#c
AD_HEAD

AD_IDL(///

/// The IAAFDescriptiveMarker interface is implemented by objects which represent
/// a descriptive metadata associated with a point in time.   A DescriptiveMarker
/// may contain a DescriptiveFramework object that specifies the metadata.
///
/// In addition to the specific error results listed for each method\,
/// all methods in this interface may also return one of the following
/// values:
/// 
/// AAFRESULT_NOMEMORY
///   - insufficient system memory is available to perform the
///     operation.
///
/// AAFRESULT_NOT_INITIALIZED
///   - This object has not yet had Initialize\(\) called on it through
///     this object's primary interface.  Note that IAAFMobSlot is a
///     primary interface for an abstract class\, so it is not
///     appropriate for the Initialize\(\) method to exist in this
///     interface.  The Initialize\(\) method is available through the
///     concrete object's primary interface.
/// 
///)

AD_FORWARD_DECLARATION(AAFDescriptiveFramework)

AD_CLASS_UUID(d035e5fe, 0bf1, 4dc5, ae, 6b, 2c, 37, f4, 3a, 07, a6)

AD_DEFAULT_UUID(c377b78e, 591f, 4ba9, a0, 69, 18, 43, 8c, 62, 6e, 34)

AD_XCLASS_BEGIN(Concrete, StoredObject)

AD_METHOD0(Initialize,
		   Initializes a newly allocated\,
  /// IAAFDescriptiveFrame object.  This method must be called
  /// after allocation\, and before any other method can be called.
  ///
  /// Return codes:
  /// 
  /// AAFRESULT_SUCCESS
  ///   - succeeded.  \(This is the only code indicating success.\)
  ///
  /// AAFRESULT_ALREADY_INITIALIZED
  ///   - Initialize\(\) has already been called on this object.)


AD_XMETHOD2(SetDescribedSlotIDs,
		[in],
		objPass,
		aafUInt32,
		numberElements,
		Number of elements in the pDescribedSlotIDs array,
		[in],
		objPass,
		aafUInt32*,
		pDescribedSlotIDs,
		Array of slot IDs,
		Specifies the slot IDs in the Mob to which the DescriptiveFramework refers.
  /// 
  /// Return codes:
  ///
  /// AAFRESULT_SUCCESS
  ///   - succeeded
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pMonoSourceSlotIDs is null 
  ///
  /// This interface is not currently implemented.)


AD_XMETHOD2(GetDescribedSlotIDs,
		[in],
		objPass,
		aafUInt32,
		numberElements,
		Number of elements in the pDescribedSlotIDs array,
		[in],
		objPass,
		aafUInt32*,
		pDescribedSlotIDs,
		Array of channel IDs,
		Get the described slot IDs that are referenced by this object.  Refer to
  /// SetDescribedSlotIDs for a description of pDescribedSlotIDs.
  ///
  /// Return codes:
  ///
  /// AAFRESULT_SUCCESS
  ///   - succeeded
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pDescribedSlotIDs is null
  ///
  /// AAFRESULT_PROP_NOT_PRESENT
  ///   - the property is not present
  ///
  /// AAFRESULT_SMALLBUF
  ///   - pDescribedSlotIDs is too small
  ///
  /// This interface is not currently implemented.)

AD_XMETHOD1(GetDescribedSlotIDsSize,
		[out],
		objPass,
		aafUInt32 *,
		numberElements,
		Number of elements in the pDescribedSlotIDs array,
		Get the number of slot IDs stored by this DescriptiveMarker.
  ///
  /// Return codes:
  ///
  /// AAFRESULT_SUCCESS
  ///   - succeeded
  ///
  /// AAFRESULT_NULL_PARAM
  ///   - pDescribedSlotIDs is null )

AD_XMETHOD1(SetDescriptiveFramework,
		[in],
		objIn,
		AAFDescriptiveFramework,
		pDescriptiveFramework,
		DescriptorFramework object to set,
		Sets the DescriptiveFramework that describes this DescriptiveMarker.
  ///
  /// Return codes:
  ///
  /// AAFRESULT_SUCCESS
  ///	- succeeded
  ///
  /// AAFRESULT_NULL_PARAM
  ///	- pDescriptorFramework is null)

AD_XMETHOD1(GetDescriptiveFramework,
		[out\,retval],
		objOut,
		AAFDescriptiveFramework,
		ppDescriptiveFramework,
		DescriptorFramework object to return,
		Gets the DescriptiveFramework that describes this DescriptiveMarker.
  ///
  /// Return codes:
  ///
  /// AAFRESULT_SUCCESS
  ///	- succeeded
  ///
  /// AAFRESULT_NULL_PARAM
  ///	- ppDescriptorFramework is null)

AD_XCLASS_END(Concrete, StoredObject)
